nextcloud:
  enabled: true
  nextcloud:
    host: &host nextcloud.jsnouff.net
    existingSecret:
      enabled: true
      secretName: nextcloud-credentials
      usernameKey: username
      passwordKey: password
    extraEnv:
      - name: NEXTCLOUD_DOMAIN_NAME
        value: *host
      - name: OVERWRITEHOST
        value: *host
      - name: OVERWRITEHOST
        value: *host
      - name: TRUSTED_PROXIES
        value: *host
      - name: NEXTCLOUD_TRUSTED_DOMAINS
        value: *host
      - name: OVERWRITECLIURL
        value: https://nextcloud.jsnouff.net
      - name: OVERWRITEPROTOCOL
        value: https
      - name: OBJECTSTORE_S3_BUCKET
        value: jsnouff-nextcloud-data
      - name: OBJECTSTORE_S3_HOST
        value: s3.us-east-005.backblazeb2.com
      - name: OBJECTSTORE_S3_PORT
        value: "443"
      - name: OBJECTSTORE_S3_REGION
        value: us-east-005
      - name: OBJECTSTORE_S3_SSL
        value: "true"
      - name: OBJECTSTORE_S3_KEY
        valueFrom:
          secretKeyRef:
            name: backblaze-s3-credentials
            key: keyID
      - name: OBJECTSTORE_S3_SECRET
        valueFrom:
          secretKeyRef:
            name: backblaze-s3-credentials
            key: applicationKey
  lifecycle:
    postStartCommand: ["/bin/sh", "-c", "echo \"ServerName nextcloud.jsnouff.net\" | tee -a /etc/apache2/apache2.conf"]
  persistence:
    enabled: true
  internalDatabase:
    enabled: false
  externalDatabase:
    enabled: true
    type: postgresql
    host: nextcloud-postgresql:5432
    existingSecret:
      enabled: true
      secretName: postgres-credentials
      usernameKey: username
      passwordKey: password
  resources:
    requests:
      cpu: 25m
      memory: 350Mi
  postgresql:
    enabled: true
    global:
      postgresql:
        auth:
          existingSecret: postgres-credentials
          secretKeys:
            adminPasswordKey: postgres-password
            userPasswordKey: password
            replicationPasswordKey: replication-password
    primary:
      persistence:
        enabled: true
      resources:
        requests:
          cpu: 5m
          memory: 32Mi
  redis:
    enabled: true
    auth:
      existingSecret: nextcloud-credentials
      existingSecretPasswordKey: password
    architecture: standalone
    master:
      resources:
        requests:
          cpu: 10m
          memory: 16Mi
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: lets-encrypt-production
      ingress.kubernetes.io/force-ssl-redirect: "true"
      ingress.kubernetes.io/protocol: http
      kubernetes.io/ingress.class: traefik
      kubernetes.io/tls-acme: "true"
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls.options: traefik-default-tls@kubernetescrd
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/custom-response-headers: "Access-Control-Allow-Origin:*||Access-Control-Allow-Methods:GET,POST,OPTIONS||Access-Control-Allow-Headers:DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range||Access-Control-Expose-Headers:Content-Length,Content-Range"
      traefik.ingress.kubernetes.io/router.middlewares: traefik-default-security@kubernetescrd
    tls:
      - hosts:
          - *host
        secretName: tls-secret
  startupProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    failureThreshold: 100
common:
  resticBackups:
    enabled: true
    targets:
      nextcloud-data:
        pvcName: nextcloud-nextcloud
        bucket: "b2:jsnouff-nextcloud-backup"
        restoreVersion: latest
        affinity:
          podAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - nextcloud
                topologyKey: kubernetes.io/hostname
      nextcloud-db:
        pvcName: data-nextcloud-postgresql-0
        bucket: "b2:jsnouff-nextcloud-db-backup"
        restoreVersion: latest
        affinity:
          podAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: statefulset.kubernetes.io/pod-name
                    operator: In
                    values:
                    - nextcloud-postgresql-0
                topologyKey: kubernetes.io/hostname