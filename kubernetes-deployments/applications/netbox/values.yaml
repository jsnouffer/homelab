netbox:
  enabled: true

  existingSecret: netbox-credentials

  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: lets-encrypt-production
      ingress.kubernetes.io/force-ssl-redirect: "true"
      ingress.kubernetes.io/protocol: http
      kubernetes.io/ingress.class: traefik
      kubernetes.io/tls-acme: "true"
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls.options: traefik-default-tls@kubernetescrd
      traefik.ingress.kubernetes.io/router.tls: "true"
    hosts:
      - host: netbox.jsnouff.net
        paths:
          - /
    tls:
      - hosts:
          - netbox.jsnouff.net
        secretName: tls-secret

  postgresql:
    enabled: false

  externalDatabase:
    host: postgresql
    existingSecretName: db-credentials
    existingSecretKey: password

  redis:
    enabled: false

  tasksRedis:
    host: redis-master
    sentinelService: redis-master
    existingSecretName: db-credentials
    existingSecretKey: password

  cachingRedis:
    host: redis-master
    sentinelService: redis-master
    existingSecretName: db-credentials
    existingSecretKey: password


postgresql:
  fullnameOverride: postgresql
  auth:
    username: netbox
    database: netbox
    existingSecret: db-credentials
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: password
      replicationPasswordKey: replication-password

redis:
  fullnameOverride: redis
  architecture: standalone
  auth:
    existingSecret: db-credentials
    existingSecretPasswordKey: password