rook-ceph:
  enabled: true
rook-ceph-cluster:
  enabled: true
  toolbox:
    enabled: true
  ingress:
    dashboard:
      host:
        name: &domain ceph.jsnouff.net
        path: "/"
      tls:
        - hosts:
            - *domain
          secretName: tls-secret
      annotations:
        cert-manager.io/cluster-issuer: lets-encrypt-production
        ingress.kubernetes.io/force-ssl-redirect: "true"
        ingress.kubernetes.io/protocol: http
        kubernetes.io/ingress.class: traefik
        kubernetes.io/tls-acme: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: traefik-default-security@kubernetescrd
        traefik.ingress.kubernetes.io/router.tls.options: traefik-default-tls@kubernetescrd
        traefik.ingress.kubernetes.io/router.tls: "true"
  cephClusterSpec:
    storage:
      useAllNodes: true
      useAllDevices: false
      devices:
        - name: /dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_drive-scsi1
        - name: /dev/disk/by-id/scsi-SATA_PNY_CS900_500GB_PNY2350231211010034B
    mon:
      count: 3
    mgr:
      count: 2
    dashboard:
      ssl: false
    crashCollector:
      disable: true
    logCollector:
      enabled: false

    resources:
      mgr:
        limits:
          cpu: "500m"
          memory: "1Gi"
        requests:
          cpu: "125m"
          memory: "512Mi"
      mon:
        limits:
          cpu: "500m"
          memory: "1Gi"
        requests:
          cpu: "125m"
          memory: "512Mi"
      osd:
        limits:
          cpu: "1000m"
          memory: "4Gi"
        requests:
          cpu: "125m"
          memory: "4Gi"
      prepareosd:
        requests:
          cpu: "500m"
          memory: "50Mi"
      mgr-sidecar:
        limits:
          cpu: "500m"
          memory: "100Mi"
        requests:
          cpu: "100m"
          memory: "40Mi"
      crashcollector:
        limits:
          cpu: "500m"
          memory: "60Mi"
        requests:
          cpu: "100m"
          memory: "60Mi"
      logcollector:
        limits:
          cpu: "500m"
          memory: "1Gi"
        requests:
          cpu: "100m"
          memory: "100Mi"
      cleanup:
        limits:
          cpu: "500m"
          memory: "1Gi"
        requests:
          cpu: "500m"
          memory: "100Mi"
      exporter:
        limits:
          cpu: "250m"
          memory: "128Mi"
        requests:
          cpu: "50m"
          memory: "50Mi"

  cephBlockPools:
    - name: ceph-blockpool
      spec:
        failureDomain: host
        replicated:
          size: 3
      storageClass:
        enabled: true
        name: ceph-block
        isDefault: true
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        volumeBindingMode: "Immediate"
        parameters:
          imageFormat: "2"
          imageFeatures: layering
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
          csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/fstype: ext4
  cephFileSystems:
    - name: ceph-filesystem
      spec:
        metadataPool:
          replicated:
            size: 3
        dataPools:
          - name: data0
            failureDomain: host
            replicated:
              size: 3
        metadataServer:
          activeCount: 1
          activeStandby: false
          resources:
            limits:
              cpu: "2000m"
              memory: "4Gi"
            requests:
              cpu: "1000m"
              memory: "4Gi"
          priorityClassName: system-cluster-critical
      storageClass:
        enabled: true
        isDefault: false
        name: ceph-filesystem
        pool: data0
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        volumeBindingMode: "Immediate"
        mountOptions: []
        parameters:
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
          csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/fstype: ext4
  cephObjectStores: {}