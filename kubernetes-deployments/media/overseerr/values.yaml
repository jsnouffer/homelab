overseerr:
  enabled: true
  global:
    fullnameOverride: overseerr
  controllers:
    main:
      containers:
        main:
          image:
            repository: lscr.io/linuxserver/overseerr
            tag: latest # managed by ArgoCD Image Updater
          env:
            PUID: "1000"
            PGID: "1000"
            TZ: "America/New_York"
          resources:
            requests:
              cpu: 25m
              memory: 250Mi
            limits:
              cpu: 500m
              memory: 500Mi
          probes:
            liveness: &lr-probe
              enabled: true
              type: &probe-type HTTP
              path: &probe-path /
              spec:
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            readiness: *lr-probe
            startup:
              enabled: true
              type: *probe-type
              path: *probe-path
              spec:
                initialDelaySeconds: 10
                periodSeconds: 5
                timeoutSeconds: 5
                successThreshold: 1
                failureThreshold: 30
  service:
    main:
      controller: main
      ports:
        http:
          port: &main-port 5055
  ingress:
    main:
      enabled: true
      hosts:
        - host: &domain overseerr.jsnouff.net
          paths:
            - path: /
              pathType: Prefix
              service:
                name: overseerr
                port: *main-port
      tls:
        - hosts:
            - *domain
          secretName: tls-secret
      annotations:
        cert-manager.io/cluster-issuer: lets-encrypt-production
        ingress.kubernetes.io/force-ssl-redirect: "true"
        ingress.kubernetes.io/protocol: http
        kubernetes.io/ingress.class: traefik
        kubernetes.io/tls-acme: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: traefik-default-security@kubernetescrd
        traefik.ingress.kubernetes.io/router.tls.options: traefik-default-tls@kubernetescrd
        traefik.ingress.kubernetes.io/router.tls: "true"

  persistence:
    config:
      enabled: true
      accessMode: ReadWriteOnce
      size: 1Gi

common:
  resticBackups:
    enabled: true
    targets:
      overseerr-data:
        pvcName: overseerr-config
        bucket: "b2:jsnouff-overseerr"
        restoreVersion: latest
        tags:
          - "{{ $.Values.overseerr.controllers.main.containers.main.image.repository }}:{{ $.Values.overseerr.controllers.main.containers.main.image.tag }}"
        affinity:
          podAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - overseerr
                topologyKey: kubernetes.io/hostname
