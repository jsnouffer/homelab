tunarr:
  enabled: true
  global:
    fullnameOverride: tunarr
  defaultPodOptions:
    automountServiceAccountToken: false
    # securityContext:
    #   seccompProfile:
    #     type: RuntimeDefault
  controllers:
    tunarr:
      type: deployment
      strategy: Recreate
      pod:
        priorityClassName: nvidia-gpu-priority
        runtimeClassName: nvidia
      containers:
        tunarr:
          image:
            repository: ghcr.io/chrisbenincasa/tunarr
            tag: latest # overriden by ArgoCD helm parameters file
            pullPolicy: IfNotPresent
          env:
            LOG_LEVEL: INFO
            TZ: "America/New_York"
            TUNARR_SERVER_ADMIN_MODE: "true"
            TUNARR_SERVER_TRUST_PROXY: "true"
          resources:
            # requests:
            #   cpu: 2000m
            #   memory: 1Gi
            limits:
              nvidia.com/gpu: 1
              # cpu: 8000m
              # memory: 8Gi
          # securityContext:
          #   allowPrivilegeEscalation: false
          #   privileged: false
          #   capabilities:
          #     drop:
          #       - ALL
          # probes:
          #   liveness: &tunarr-lr-probe
          #     enabled: true
          #     type: HTTP
          #     path: /
          #     spec:
          #       initialDelaySeconds: 0
          #       periodSeconds: 10
          #       timeoutSeconds: 1
          #       successThreshold: 1
          #       failureThreshold: 3
          #   readiness: *tunarr-lr-probe
          #   startup:
          #     enabled: true
          #     type: HTTP
          #     path: /
          #     spec:
          #       initialDelaySeconds: 0
          #       periodSeconds: 5
          #       timeoutSeconds: 5
          #       successThreshold: 1
          #       failureThreshold: 10
  service:
    tunarr:
      controller: tunarr
      ports:
        http:
          port: &port 8000
  ingress:
    tunarr:
      enabled: true
      hosts:
        - host: &domain tunarr.jsnouff.net
          paths:
            - path: /
              pathType: Prefix
              service:
                name: tunarr
                port: *port
      tls:
        - hosts:
            - *domain
          secretName: tls-secret
      annotations:
        cert-manager.io/cluster-issuer: lets-encrypt-production
        ingress.kubernetes.io/force-ssl-redirect: "true"
        ingress.kubernetes.io/protocol: http
        kubernetes.io/ingress.class: traefik
        kubernetes.io/tls-acme: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: traefik-default-security@kubernetescrd
        traefik.ingress.kubernetes.io/router.tls.options: traefik-default-tls@kubernetescrd
        traefik.ingress.kubernetes.io/router.tls: "true"
  persistence:
    config:
      enabled: true
      accessMode: ReadWriteOnce
      size: 1Gi
      advancedMounts:
        tunarr:
          tunarr:
            - path: /config/tunarr

# common:
#   resticBackups:
#     enabled: true
#     targets:
#       tunarr-data:
#         pvcName: tunarr
#         bucket: tunarr-backup
#         restoreVersion: latest
#         tags:
#           - "tunarr-image:{{ $.Values.tunarr.controllers.tunarr.containers.tunarr.image.tag }}"
#         affinity:
#           podAffinity:
#             preferredDuringSchedulingIgnoredDuringExecution:
#             - weight: 100
#               podAffinityTerm:
#                 labelSelector:
#                   matchExpressions:
#                     - key: app.kubernetes.io/name
#                       operator: In
#                       values:
#                       - tunarr
#                 topologyKey: kubernetes.io/hostname
