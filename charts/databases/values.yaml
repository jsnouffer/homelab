postgresql:
  enabled: false
  global:
    fullnameOverride: postgresql
  defaultPodOptions:
    automountServiceAccountToken: false
    securityContext:
      seccompProfile:
        type: RuntimeDefault
  controllers:
    postgresql:
      type: statefulset
      strategy: RollingUpdate
      serviceAccount:
        name: default
      containers:
        postgresql:
          image:
            repository: postgres
            tag: "17.5"
            pullPolicy: IfNotPresent
          env:
            POSTGRES_USER:
            POSTGRES_PASSWORD:
            POSTGRES_DB:
          resources:
            requests:
              cpu: 25m
              memory: 32Mi
            limits:
              cpu: 250m
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - pg_isready -U "${POSTGRES_USER}" -d "dbname=${POSTGRES_DB}" -h 127.0.0.1 -p 5432
                failureThreshold: 6
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
            readiness:
              enabled: true
              custom: true
              spec:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - -e
                    - pg_isready -U "${POSTGRES_USER}" -d "dbname=${POSTGRES_DB}" -h 127.0.0.1 -p 5432
                failureThreshold: 6
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
      statefulset:
        volumeClaimTemplates:
          - name: data
            accessMode: ReadWriteOnce
            size: 1Gi
            globalMounts:
              - path: /var/lib/postgresql/data
                subPath: data
  service:
    postgresql:
      controller: postgresql
      ports:
        http:
          port: 5432

mariadb:
  enabled: false
  global:
    fullnameOverride: mariadb
  defaultPodOptions:
    automountServiceAccountToken: false
    securityContext:
      seccompProfile:
        type: RuntimeDefault
  controllers:
    mariadb:
      type: statefulset
      strategy: RollingUpdate
      serviceAccount:
        name: default
      containers:
        mariadb:
          image:
            repository: mariadb
            tag: 11.8.2-noble
            pullPolicy: IfNotPresent
          env:
            MARIADB_USER:
            MARIADB_PASSWORD:
            MARIADB_ROOT_PASSWORD:
            MARIADB_DATABASE:
          resources:
            requests:
              cpu: 25m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          # probes:
          #   liveness:
          #     enabled: true
          #     custom: true
          #     spec:
          #       exec:
          #         command:
          #           - /bin/sh
          #           - -c
          #           - pg_isready -U "${POSTGRES_USER}" -d "dbname=${POSTGRES_DB}" -h 127.0.0.1 -p 5432
          #       failureThreshold: 6
          #       initialDelaySeconds: 30
          #       periodSeconds: 10
          #       successThreshold: 1
          #       timeoutSeconds: 5
          #   readiness:
          #     enabled: true
          #     custom: true
          #     spec:
          #       exec:
          #         command:
          #           - /bin/sh
          #           - -c
          #           - -e
          #           - pg_isready -U "${POSTGRES_USER}" -d "dbname=${POSTGRES_DB}" -h 127.0.0.1 -p 5432
          #       failureThreshold: 6
          #       initialDelaySeconds: 5
          #       periodSeconds: 10
          #       successThreshold: 1
          #       timeoutSeconds: 5
      statefulset:
        volumeClaimTemplates:
          - name: data
            accessMode: ReadWriteOnce
            size: 1Gi
            globalMounts:
              - path: /var/lib/postgresql/data
                subPath: data
  service:
    mariadb:
      controller: mariadb
      ports:
        http:
          port: 3306

valkey:
  enabled: false
  global:
    fullnameOverride: valkey
  defaultPodOptions:
    automountServiceAccountToken: false
    securityContext:
      fsGroup: 1000
      seccompProfile:
        type: RuntimeDefault
  controllers:
    valkey:
      type: statefulset
      strategy: RollingUpdate
      serviceAccount:
        name: default
      containers:
        valkey:
          image:
            repository: valkey/valkey
            tag: 8.1.3-bookworm
            pullPolicy: IfNotPresent
          env:
            ALLOW_EMPTY_PASSWORD: yes
          resources:
            requests:
              cpu: 25m
              memory: 32Mi
            limits:
              cpu: 250m
              memory: 250Mi
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                exec:
                  command: &valkey-health-exec
                    - /bin/bash
                    - -c
                    - -e
                    - |
                      response=$(valkey-cli ping)
                      if [ "$response" != "PONG" ]; then
                        echo "$response"
                        exit 1
                      fi
                failureThreshold: 5
                initialDelaySeconds: 20
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 6
            readiness:
              enabled: true
              custom: true
              spec:
                exec:
                  command: *valkey-health-exec
                failureThreshold: 5
                initialDelaySeconds: 20
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 2
      statefulset:
        volumeClaimTemplates:
          - name: data
            accessMode: ReadWriteOnce
            size: 1Gi
            globalMounts:
              - path: /data
                subPath: data
  service:
    valkey:
      controller: valkey
      ports:
        http:
          port: 6379

mongodb:
  enabled: false
  global:
    fullnameOverride: mongodb
  defaultPodOptions:
    automountServiceAccountToken: false
    securityContext:
      seccompProfile:
        type: RuntimeDefault
  controllers:
    mongodb:
      type: statefulset
      strategy: RollingUpdate
      serviceAccount:
        name: default
      containers:
        mongodb:
          image:
            repository: mongo
            tag: 8.0.11
            pullPolicy: IfNotPresent
          env:
            MONGO_INITDB_ROOT_USERNAME:
            MONGO_INITDB_ROOT_PASSWORD:
          resources:
            requests:
              cpu: 50m
              memory: 250Mi
            limits:
              cpu: 500m
              memory: 750Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - >-
                      mongosh --port 27017 --eval "db.adminCommand('ping')"
                failureThreshold: 6
                initialDelaySeconds: 30
                periodSeconds: 20
                successThreshold: 1
                timeoutSeconds: 10
            readiness:
              enabled: true
              custom: true
              spec:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - >-
                      mongosh --port 27017 --eval 'if (!(db.hello().isWritablePrimary || db.hello().secondary)) { throw new Error("Not ready") }'
                failureThreshold: 6
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
      statefulset:
        volumeClaimTemplates:
          - name: data
            accessMode: ReadWriteOnce
            size: 1Gi
            globalMounts:
              - path: /data/db
  service:
    mongodb:
      controller: mongodb
      ports:
        http:
          port: 27017