version: v1alpha1
debug: false
persist: true # Indicates whether to pull the machine config upon every boot.
machine:
  type: controlplane
  certSANs:
    - ${dns_name}
    - ${ip_address}

  # Used to provide additional options to the kubelet.
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.26.1 # The `image` field is an optional reference to an alternative kubelet image.
    defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
    disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.

    # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
    # clusterDNS:
    #     - 10.96.0.10
    #     - 169.254.2.53

    # # The `extraArgs` field is used to provide additional flags to the kubelet.
    # extraArgs:
    #     key: value

    # # The `extraMounts` field is used to add additional mounts to the kubelet container.
    # extraMounts:
    #     - destination: /var/lib/example
    #       type: bind
    #       source: /var/lib/example
    #       options:
    #         - bind
    #         - rshared
    #         - rw

    # # The `extraConfig` field is used to provide kubelet configuration overrides.
    # extraConfig:
    #     serverTLSBootstrap: true

    # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
    # nodeIP:
    #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
    #     validSubnets:
    #         - 10.0.0.0/8
    #         - '!10.0.0.3/32'
    #         - fdc7::/16
  # Provides machine specific network configuration options.
  network:
    # hostname: cobra-cp1
    nameservers:
      - 192.168.1.1
    interfaces:
      - interface: eth0
        addresses:
          - ${ip_address}/24
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: 192.168.1.1
  # # `interfaces` is used to define the network interface configuration.
  # interfaces:
  #     - interface: eth0 # The interface name.
  #       # Assigns static IP addresses to the interface.
  #       addresses:
  #         - 192.168.2.0/24
  #       # A list of routes associated with the interface.
  #       routes:
  #         - network: 0.0.0.0/0 # The route's network (destination).
  #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
  #           metric: 1024 # The optional metric for the route.
  #       mtu: 1500 # The interface's MTU.
  #
  #       # # Picks a network device using the selector.

  #       # # select a device with bus prefix 00:*.
  #       # deviceSelector:
  #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
  #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
  #       # deviceSelector:
  #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
  #       #     driver: virtio # Kernel driver, supports matching by wildcard.

  #       # # Bond specific options.
  #       # bond:
  #       #     # The interfaces that make up the bond.
  #       #     interfaces:
  #       #         - eth0
  #       #         - eth1
  #       #     mode: 802.3ad # A bond option.
  #       #     lacpRate: fast # A bond option.

  #       # # Bridge specific options.
  #       # bridge:
  #       #     # The interfaces that make up the bridge.
  #       #     interfaces:
  #       #         - eth0
  #       #         - eth1
  #       #     # A bridge option.
  #       #     stp:
  #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.

  #       # # Indicates if DHCP should be used to configure the interface.
  #       # dhcp: true

  #       # # DHCP specific options.
  #       # dhcpOptions:
  #       #     routeMetric: 1024 # The priority of all routes received via DHCP.

  #       # # Wireguard specific configuration.

  #       # # wireguard server example
  #       # wireguard:
  #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
  #       #     listenPort: 51111 # Specifies a device's listening port.
  #       #     # Specifies a list of peer configurations to apply to a device.
  #       #     peers:
  #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
  #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
  #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
  #       #           allowedIPs:
  #       #             - 192.168.1.0/24
  #       # # wireguard peer example
  #       # wireguard:
  #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
  #       #     # Specifies a list of peer configurations to apply to a device.
  #       #     peers:
  #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
  #       #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.
  #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
  #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
  #       #           allowedIPs:
  #       #             - 192.168.1.0/24

  #       # # Virtual (shared) IP address configuration.

  #       # # layer2 vip example
  #       # vip:
  #       #     ip: 172.16.199.55 # Specifies the IP address to be used.

  # # Allows for extra entries to be added to the `/etc/hosts` file
  # extraHostEntries:
  #     - ip: 192.168.1.100 # The IP of the host.
  #       # The host alias.
  #       aliases:
  #         - example
  #         - example.domain.tld

  # # Configures KubeSpan feature.
  # kubespan:
  #     enabled: true # Enable the KubeSpan feature.

  # Used to provide instructions for installations.
  install:
    disk: /dev/sda # The disk used for installations.
    image: ghcr.io/siderolabs/installer:v1.3.5 # Allows for supplying the image used to perform the installation.
    bootloader: true # Indicates if a bootloader should be installed.
    wipe: false # Indicates if the installation disk should be wiped at installation time.

    # # Look up disk using disk attributes like model, size, serial and others.
    # diskSelector:
    #     size: 4GB # Disk size.
    #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
    #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.

    # # Allows for supplying extra kernel args via the bootloader.
    # extraKernelArgs:
    #     - talos.platform=metal
    #     - reboot=k

    # # Allows for supplying additional system extension images to install on top of base Talos image.
    # extensions:
    #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
  # Used to configure the machine's container image registry mirrors.
  registries: {}

  # Features describe individual Talos features that can be switched on or off.
  features:
    rbac: true # Enable role-based access control (RBAC).
    stableHostname: true # Enable stable default hostname.
    apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.

    # # Configure Talos API access from Kubernetes pods.
    # kubernetesTalosAPIAccess:
    #     enabled: true # Enable Talos API access from Kubernetes pods.
    #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
    #     allowedRoles:
    #         - os:reader
    #     # The list of Kubernetes namespaces Talos API access is available from.
    #     allowedKubernetesNamespaces:
    #         - kube-system

  # # Provides machine specific control plane configuration options.

  # # ControlPlane definition example.
  # controlPlane:
  #     # Controller manager machine specific configuration options.
  #     controllerManager:
  #         disabled: false # Disable kube-controller-manager on the node.
  #     # Scheduler machine specific configuration options.
  #     scheduler:
  #         disabled: true # Disable kube-scheduler on the node.

  # # Used to partition, format and mount additional disks.

  # # MachineDisks list example.
  # disks:
  #     - device: /dev/sdb # The name of the disk to use.
  #       # A list of partitions to create on the disk.
  #       partitions:
  #         - mountpoint: /var/mnt/extra # Where to mount the partition.
  #
  #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.

  #           # # Human readable representation.
  #           # size: 100 MB
  #           # # Precise value in bytes.
  #           # size: 1073741824

  # # Allows the addition of user specified files.

  # # MachineFiles usage example.
  # files:
  #     - content: '...' # The contents of the file.
  #       permissions: 0o666 # The file's permissions in octal.
  #       path: /tmp/file.txt # The path of the file.
  #       op: append # The operation to use

  # # The `env` field allows for the addition of environment variables.

  # # Environment variables definition examples.
  # env:
  #     GRPC_GO_LOG_SEVERITY_LEVEL: info
  #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
  #     https_proxy: http://SERVER:PORT/
  # env:
  #     GRPC_GO_LOG_SEVERITY_LEVEL: error
  #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
  # env:
  #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

  # # Used to configure the machine's time settings.

  # # Example configuration for cloudflare ntp server.
  # time:
  #     disabled: false # Indicates if the time service is disabled for the machine.
  #     # Specifies time (NTP) servers to use for setting the system time.
  #     servers:
  #         - time.cloudflare.com
  #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.

  # # Used to configure the machine's sysctls.

  # # MachineSysctls usage example.
  # sysctls:
  #     kernel.domainname: talos.dev
  #     net.ipv4.ip_forward: "0"

  # # Used to configure the machine's sysfs.

  # # MachineSysfs usage example.
  # sysfs:
  #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

  # # Configures the udev system.
  # udev:
  #     # List of udev rules to apply to the udev system
  #     rules:
  #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

  # # Configures the logging system.
  # logging:
  #     # Logging destination.
  #     destinations:
  #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
  #           format: json_lines # Logs format.

  # # Configures the kernel.
  # kernel:
  #     # Kernel modules to load.
  #     modules:
  #         - name: brtfs # Module name.

  # # Configures the node labels for the machine.

  # # node labels example.
  # nodeLabels:
  #     exampleLabel: exampleLabelValue
# Provides cluster specific configuration options.
cluster:
  controlPlane:
    endpoint: ${cluster_endpoint}
  clusterName: cobra # Configures the cluster's name.
  # Provides cluster specific network configuration options.
  network:
    dnsDomain: cluster.local # The domain used by Kubernetes DNS.
    # The pod subnet CIDR.
    podSubnets:
      - 10.244.0.0/16
    # The service subnet CIDR.
    serviceSubnets:
      - 10.96.0.0/12

    # # The CNI used.
    # cni:
    #     name: custom # Name of CNI to use.
    #     # URLs containing manifests to apply for the CNI.
    #     urls:
    #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml

  # API server specific configuration options.
  apiServer:
    image: registry.k8s.io/kube-apiserver:v1.26.1
    certSANs:
      - ${dns_name}
      - ${ip_address}
    disablePodSecurityPolicy: true
    admissionControl:
      - name: PodSecurity # Name is the name of the admission controller.
        # Configuration is an embedded configuration object to be used as the plugin's
        configuration:
          apiVersion: pod-security.admission.config.k8s.io/v1alpha1
          defaults:
            audit: restricted
            audit-version: latest
            enforce: baseline
            enforce-version: latest
            warn: restricted
            warn-version: latest
          exemptions:
            namespaces:
              - kube-system
            runtimeClasses: []
            usernames: []
          kind: PodSecurityConfiguration
    # Configure the API server audit policy.
    auditPolicy:
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
        - level: Metadata
  # Controller manager server specific configuration options.
  controllerManager:
    image: registry.k8s.io/kube-controller-manager:v1.26.1 # The container image used in the controller manager manifest.
  # Kube-proxy server-specific configuration options
  proxy:
    image: registry.k8s.io/kube-proxy:v1.26.1 # The container image used in the kube-proxy manifest.

    # # Disable kube-proxy deployment on cluster bootstrap.
    # disabled: false
  # Scheduler server specific configuration options.
  scheduler:
    image: registry.k8s.io/kube-scheduler:v1.26.1 # The container image used in the scheduler manifest.
  # Configures cluster member discovery.
  discovery:
    enabled: true # Enable the cluster membership discovery feature.
    # Configure registries used for cluster member discovery.
    registries:
      # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
      kubernetes:
        disabled: true # Disable Kubernetes discovery registry.
      # Service registry is using an external service to push and pull information about cluster members.
      service: {}
      # # External service endpoint.
      # endpoint: https://discovery.talos.dev/
  # Etcd specific configuration options.
  # etcd:
    # # The container image used to create the etcd service.
    # image: gcr.io/etcd-development/etcd:v3.5.7

    # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
    # advertisedSubnets:
    #     - 10.0.0.0/8
  # A list of urls that point to additional manifests.
  extraManifests: []
  #   - https://www.example.com/manifest1.yaml
  #   - https://www.example.com/manifest2.yaml

  # A list of inline Kubernetes manifests.
  inlineManifests: []
  #   - name: namespace-ci # Name of the manifest.
  #     contents: |- # Manifest contents as a string.
  #       apiVersion: v1
  #       kind: Namespace
  #       metadata:
  #       	name: ci

  # # Core DNS specific configuration options.
  # coreDNS:
  #     image: docker.io/coredns/coredns:1.10.0 # The `image` field is an override to the default coredns image.

  # # A map of key value pairs that will be added while fetching the extraManifests.
  # extraManifestHeaders:
  #     Token: "1234567"
  #     X-ExtraInfo: info

  # # Settings for admin kubeconfig generation.
  # adminKubeconfig:
  #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
